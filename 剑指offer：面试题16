//面试题16： 数值的整数次方
//题目：实现函数double Power(double base,int exponent),求base的exponent次方。不用使用库函数（不考虑大数的问题）。

//思路：base的整数次方----》把base乘exponent次-------》可以先求base的exponent/2次然后求得的数再相乘（偶数）奇数需要再乘base
//还需要考虑指数是否小于1的情况---》先对exponent取绝对值然后算出base的exponent的绝对值次方再取倒数。（取倒数时要考虑到求得的值是否为0）
#include <iostream>
#include <cmath>
double Power(double base,int exponent)
{
	double result=1.0;

	//特殊的0次方或者1次方
	if(exponent==0)
	{
		return 1.0;
	}
	if(exponent==1)
	{
		return base;
	}

	//先求base的exponent/2的绝对值次方
	int temp=(unsigned int)exponent/2;
	//std::cout<<"temp="<<temp<<std::endl;
	for(int i=0;i<temp;++i)
	{
		result*=base;
	}

	result*=result;//********注意：这一步不要忘记*********

	if(temp%2!=0)//判断奇、偶
	{
		result*=base;
	}
	
	if(exponent<0 && result!=0)//判断exponent是否为负
	{
		result=1.0/result;
	}
	
	return result;
}

// ====================测试代码====================
void Test(const char* testName, double base, int exponent, double expectedResult)
{
    double result = Power(base, exponent);
    if (result==expectedResult)
        std::cout << testName << " passed" << std::endl;
    else
        std::cout << testName << " FAILED" << std::endl;
}

int main()
{
    // 底数、指数都为正数
    Test("Test1", 2, 4, 16);

	// 指数为负数
    Test("Test2", 2, -3, 0.125);

    // 底数为负数、指数为正数
    Test("Test3", -2, 3, -8);


    // 指数为0
    Test("Test4", 2, 0, 1);

    // 底数、指数都为0
    Test("Test5", 0, 0, 1);

    // 底数为0、指数为正数
    Test("Test6", 0, 2, 0);

    // 底数为0、指数为负数
    Test("Test7", 0, -2, 0);

    return 0;
}
