//面试题20：表示数值的字符串
//题目：请实现一个函数来判断字符串是否表示数值（包括整数和小数）。例如字符串“+100”，“5e2”,"-123"、“3.1416”及“—1E-16”都表示
//数值，但“12e”，“1a3.14”"+-5"及“12e+5.4”都不是

//整数的格式可以用A[.[B]][e|EC]或.B[e|EC]
//A为整数的数值部分，B紧跟着小数点为数值的小数部分，C紧跟着E为数值的指数部分，AC可以有正负号，B不可以有正负号，A可以没有
#include<iostream>

//匹配B部分，看是否是无符号的数字
bool isUnsignedInt(const char** str)
{
	const char* before=*str;
	while(**str!='\0'&&**str>='0'&&**str<='9')
	{
		++(*str);
	}

	return *str>before;//连同str的位置一同返回
}

//匹配AC部分看是否为有符号的数字
bool isInt(const char** str)
{
	if(**str=='+'||**str=='-')
	{
		++(*str);
	}
	return isUnsignedInt(str);
}

bool isNumeric(const char* str)
{
	if(str==NULL)
	{
		return false;
	}

	bool numeric=isInt(&str);//A部分，此时的str的位置为下一个字符的位置

	//如果接下来出现的是‘.’,说明是小数部分
	if(*str=='.')
	{
		++str;
		//1.小数可以没有整数部分，2.小数点后面可以没有数字
		//匹配B部分
		numeric=isUnsignedInt(&str)||numeric;
	}

	//如果接下来出现的是‘e’或者'E',说明是指数部分
	if(*str=='e'||*str=='E')
	{
		//e的前后都必须是数字
		++str;
		numeric=numeric && isInt(&str);
	}

	return numeric&&*str=='\0';
}
