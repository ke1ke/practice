//面试题24：反转链表
//题目：定义一个函数，输入一个链表的头结点，反转该链表并输出反转后链表的头结点。

//思路：设置三个指针一个指针指向当前节点，一个指针指向该结点的前驱，一个指针指向该结点的后继
#include"list.h"
#include<iostream>
ListNode* ReverseList(ListNode* pHead)
{
	if(pHead == NULL)
	{
		return NULL;
	}

	ListNode* RevHead=NULL;//需要返回的新的链表的头结点
	ListNode* RevNode=pHead;//反转节点
	ListNode* pFront=NULL;//反转的节点的前驱（原来链表第一个节点的前驱为NULL反转后后继为NULL）
	
	while(RevNode!= NULL)//反转节点不为NULL
	{
		ListNode* pNext=RevNode->m_pNext;//保存反转节点的后继

		if(pNext == NULL )//反转节点后继为空，即为最后一个节点的后继
		{
			RevHead=RevNode;
		}
		RevNode->m_pNext=pFront;//进行反转，
		
		pFront=RevNode;//把前驱设为当前节点

		RevNode=pNext;//反转节点设为后继

	}
	return RevHead;
}
